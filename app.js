const express = require('express');
const path = require('path');
//const mongodb = require('mongodb');
const mongoose = require('mongoose');
//var cookieParser = require('cookie-parser');
//var logger = require('morgan');

const homeRouter = require('./routes/home_route');
const applicationRouter = require('./routes/application_route');
const impressumRouter = require('./routes/impressum_route');

const app = express();

//app.use(logger('dev'));
//app.use(express.json());
//app.use(express.urlencoded({ extended: false }));
//app.use(cookieParser());
app.use(express.static(path.join(__dirname, "public/")));
app.use("/private", express.static(path.join(__dirname, "private/")))
app.use("/leaflet", express.static(path.join(__dirname, "/node_modules/leaflet/dist")));
app.use("/leaflet-routing-machine", express.static(path.join(__dirname, "/node_modules/leaflet-routing-machine/dist")));

app.use(homeRouter);
app.use(applicationRouter);
app.use(impressumRouter);

//Connect to MongoDB

mongoose.connection.once("open", () => {
    const LineStringSchema = new mongoose.Schema({
        linestring: mongoose.Schema.Types.LineString
    });

    const routeSchema = new mongoose.Schema({
        name: {
            type: String,
            required: [true, "A Name is required!"]
        },
        geometry: LineStringSchema
    });

    const route = mongoose.model("route", routeSchema);

    var route1 = new route({
        name: "route1",
        geometry: new Array([7.59265, 51.95626], [7.5915, 51.95729], [7.5909, 51.95781], [7.59067, 51.95802], [7.59053, 51.95815], [7.59023, 51.95841], [7.58999, 51.95862], [7.58982, 51.95877], [7.5895, 51.95904], [7.58915, 51.95937], [7.58865, 51.95997], [7.58865, 51.95997], [7.58877, 51.95999], [7.58909, 51.96007], [7.58926, 51.96011], [7.58929, 51.96012], [7.5893, 51.96013], [7.58933, 51.96015], [7.58935, 51.96016], [7.58937, 51.96019], [7.5894, 51.96024], [7.58952, 51.96045], [7.58971, 51.96077], [7.5898, 51.96094], [7.58985, 51.96104], [7.58993, 51.96115], [7.58993, 51.96115], [7.59012, 51.9611], [7.59036, 51.96105], [7.5906, 51.96101], [7.59086, 51.96098], [7.59108, 51.96097], [7.59131, 51.96097], [7.59153, 51.96098], [7.59176, 51.96099], [7.59196, 51.96101], [7.59196, 51.96101], [7.59196, 51.96101], [7.59222, 51.96105], [7.59274, 51.96114], [7.59288, 51.96117], [7.59301, 51.9612], [7.59321, 51.96126], [7.59342, 51.96134], [7.59387, 51.96151], [7.59402, 51.96158], [7.59429, 51.96172], [7.59444, 51.96179], [7.59451, 51.96184], [7.59457, 51.96189], [7.59466, 51.96195], [7.59522, 51.96226], [7.59599, 51.96267], [7.59609, 51.96273], [7.59663, 51.96303], [7.59673, 51.96308], [7.59687, 51.96314], [7.59695, 51.96318], [7.59723, 51.96333], [7.59798, 51.96374], [7.59842, 51.96399], [7.59848, 51.96403], [7.59853, 51.96407], [7.59857, 51.9641], [7.59861, 51.96413], [7.59865, 51.96417], [7.59868, 51.96421], [7.59871, 51.96425], [7.59874, 51.96429], [7.59877, 51.96434], [7.59879, 51.96437], [7.59881, 51.96443], [7.59881, 51.96443], [7.59885, 51.96446], [7.59889, 51.96449], [7.59894, 51.96454], [7.59896, 51.96457], [7.59899, 51.96461], [7.59901, 51.96463], [7.59904, 51.96467], [7.59909, 51.96471], [7.59914, 51.96473], [7.59918, 51.96475], [7.59922, 51.96477], [7.59926, 51.96479], [7.5994, 51.96483], [7.59992, 51.96483], [7.60021, 51.96485], [7.60025, 51.96485], [7.60031, 51.96486], [7.60059, 51.9649], [7.60086, 51.96494], [7.60116, 51.965], [7.60134, 51.96503], [7.60153, 51.96506], [7.60153, 51.96506], [7.60152, 51.96496], [7.60152, 51.96479], [7.60153, 51.96468], [7.60154, 51.96456], [7.60154, 51.96452], [7.60156, 51.96439], [7.60158, 51.96425], [7.60162, 51.96408], [7.60165, 51.964], [7.60167, 51.96392], [7.60171, 51.96378], [7.60179, 51.96358], [7.60185, 51.96343], [7.60197, 51.96312], [7.60208, 51.96286], [7.60216, 51.96263], [7.60224, 51.9624], [7.60229, 51.96224], [7.60231, 51.96215], [7.60235, 51.962], [7.60238, 51.96184], [7.60239, 51.96174], [7.6024, 51.96165], [7.6024, 51.96158], [7.6024, 51.96133], [7.6024, 51.96126], [7.6024, 51.96114], [7.60239, 51.96099], [7.60239, 51.96087], [7.60238, 51.96074], [7.60238, 51.96049], [7.60239, 51.96034], [7.60239, 51.96022], [7.6024, 51.9601], [7.60242, 51.95982], [7.60243, 51.95969], [7.60244, 51.9596], [7.60244, 51.9596], [7.60232, 51.95955], [7.60176, 51.95933], [7.60172, 51.95932], [7.60162, 51.95929], [7.60142, 51.95923], [7.60133, 51.95921], [7.60121, 51.95919], [7.60117, 51.95918], [7.60085, 51.95914], [7.60065, 51.95912], [7.60045, 51.9591], [7.60018, 51.95909], [7.60004, 51.95909], [7.59981, 51.95908], [7.59953, 51.95907], [7.59914, 51.95903], [7.59885, 51.959], [7.59866, 51.95898], [7.59847, 51.95894], [7.59816, 51.95887], [7.59793, 51.9588], [7.59772, 51.95872], [7.5975, 51.95863], [7.59728, 51.95853], [7.59693, 51.95834], [7.59638, 51.95803], [7.59628, 51.95797], [7.59574, 51.95764], [7.5954, 51.95744], [7.59507, 51.95726], [7.59486, 51.95716], [7.59486, 51.95716], [7.59486, 51.95716], [7.5948, 51.95713], [7.59456, 51.95701], [7.59404, 51.95676], [7.59333, 51.95642], [7.59289, 51.95622], [7.59275, 51.95616], [7.59275, 51.95616], [7.59265, 51.95626], [7.5915, 51.95729], [7.5909, 51.95781], [7.59067, 51.95802], [7.59053, 51.95815], [7.59023, 51.95841], [7.58999, 51.95862], [7.58982, 51.95877], [7.5895, 51.95904], [7.58915, 51.95937], [7.58865, 51.95997], [7.58865, 51.95997], [7.58877, 51.95999], [7.58909, 51.96007], [7.58926, 51.96011], [7.58929, 51.96012], [7.5893, 51.96013], [7.58933, 51.96015], [7.58935, 51.96016], [7.58937, 51.96019], [7.5894, 51.96024], [7.58952, 51.96045], [7.58971, 51.96077], [7.5898, 51.96094], [7.58984, 51.96102], [7.58984, 51.96102])
    });

    route1.save(error => {
        console.log(error);
    })
});

mongoose.connection.on("connecting", () => {
    console.log("Connecting to MongoDB database ...");
});

mongoose.connection.on("connected", () => {
    console.log("Connection to MongoDB database established!");
});

mongoose.connection.on("disconnected", () => {
    console.log("MongoDB database disconnected!");
});

mongoose.connection.on("error", (error) => {
    console.log("MongoDB connection error", error);
});

process.on("SIGINT", () => {
    mongoose.connection.close(() => {
        console.log("Connection to MongoDB database lost due to application termination!");
        process.exit();
    });
});

mongoose.connect('mongodb://localhost:27017/routedb', { useNewUrlParser: true })
    .catch(error => console.log(error));

module.exports = app;
